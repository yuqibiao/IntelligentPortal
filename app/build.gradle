apply plugin: 'com.android.application'

/*greenDao*/
apply plugin: 'org.greenrobot.greendao'
/*kotlin*/
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.ygsoft.dap.std.portal.app"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        multiDexEnabled true /**添加多 dex分包支持*/
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
                /*
                Room 具有以下注释处理器选项：
                room.schemaLocation：配置并启用将数据库架构导出到给定目录中的 JSON 文件的功能。
                                    [创建好表和数据库后编译，会在 app/schemas 目录下生成这个 JSON 文件]
                room.incremental：启用 Gradle 增量注释处理器。
                room.expandProjection：配置 Room 以重写查询，使其顶部星形投影在展开后仅包含 DAO 方法返回类型中定义的列。
                */
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //--打包名称
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    def buildTime = buildTime()
                    def buildType = variant.buildType.name
                    outputFileName = "intelligent_audit_v${defaultConfig.versionName}_${buildTime}_${buildType}.apk"
                }
            }
        }
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
    buildToolsVersion '29.0.2'
}

def buildTime() { return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC")) }

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'

    api project(path: ':baselibrary')

    /*ButterKnife依赖*/
    api 'com.jakewharton:butterknife:8.1.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.1.0'

    implementation 'androidx.multidex:multidex:2.0.0'

   /*event bus*/
    api 'de.greenrobot:eventbus:3.0.0-beta1'

    /*底部菜单
    * https://github.com/yingLanNull/AlphaTabsIndicator
    * */
    api 'com.yinglan.alphatabs:library:1.0.8'

    /*
     * viewpager 指示器
     * https://github.com/ongakuer/CircleIndicator
     */
    api 'me.relex:circleindicator:1.2.2'

    /*
    *图片选择、拍照
    * https://github.com/LuckSiege/PictureSelector
    */
    implementation 'com.github.LuckSiege.PictureSelector:picture_library:v2.2.3'

    /*item滑动删除
    * https://github.com/mcxtzhang/SwipeDelMenuLayout
    */
    //implementation 'com.github.mcxtzhang:SwipeDelMenuLayout:V1.3.0'

    /*
     *https://github.com/hedge-hog/RatingBar
     */
    //implementation 'com.hedgehog.ratingbar:app:1.1.2'

    /*
     *时间、日期选择器、省市区三级联动
     *https://github.com/Bigkoo/Android-PickerView
     */
    //implementation 'com.contrarywind:Android-PickerView:4.1.8'

    /*
    *google room
    */
    def room_version = "2.2.0-alpha01"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"
}
